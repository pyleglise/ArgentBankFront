{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logingPending, logingSuccess, selectCurrentToken } from './authSlice';\nimport { userFirstName, userPending } from '../profile/userSlice';\n\n/**\r\n * Component that refresh the state.auth.token depending on the localstorage token status.\\\r\n * No props\r\n *\r\n * @namespace\r\n * @component\r\n * @author  Pierre-Yves Léglise <pleglise@pm.me>\r\n * @example\r\n *  RefreshAuthState()\r\n * @returns {Boolean} Authorization status\r\n *\r\n */\nexport const RefreshAuthState = () => {\n  _s();\n  const dispatch = useDispatch();\n  const localToken = localStorage.getItem('token');\n  const localStorageFirstName = localStorage.getItem('firstName');\n  const token = useSelector(selectCurrentToken);\n  // keeps you logged in while refreshing\n  if (localToken && !token) {\n    dispatch(logingPending());\n    dispatch(logingSuccess(localToken));\n    if (localStorageFirstName) {\n      dispatch(userPending());\n      dispatch(userFirstName(localStorageFirstName));\n    }\n  }\n};\n_s(RefreshAuthState, \"gp616CiZsT7PnlYIR+ywftyOqD0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = RefreshAuthState;\nvar _c;\n$RefreshReg$(_c, \"RefreshAuthState\");","map":{"version":3,"names":["useDispatch","useSelector","logingPending","logingSuccess","selectCurrentToken","userFirstName","userPending","RefreshAuthState","_s","dispatch","localToken","localStorage","getItem","localStorageFirstName","token","_c","$RefreshReg$"],"sources":["C:/Users/Pierre-Yves/Sync/Emploi/OpenClassroom/Formation JavascriptReact/P13/argentbank-front/src/features/auth/RefreshAuthState.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\r\nimport { logingPending, logingSuccess, selectCurrentToken } from './authSlice'\r\nimport { userFirstName, userPending } from '../profile/userSlice'\r\n\r\n/**\r\n * Component that refresh the state.auth.token depending on the localstorage token status.\\\r\n * No props\r\n *\r\n * @namespace\r\n * @component\r\n * @author  Pierre-Yves Léglise <pleglise@pm.me>\r\n * @example\r\n *  RefreshAuthState()\r\n * @returns {Boolean} Authorization status\r\n *\r\n */\r\nexport const RefreshAuthState = () => {\r\n  const dispatch = useDispatch()\r\n  const localToken = localStorage.getItem('token')\r\n  const localStorageFirstName = localStorage.getItem('firstName')\r\n  const token = useSelector(selectCurrentToken)\r\n  // keeps you logged in while refreshing\r\n  if (localToken && !token) {\r\n    dispatch(logingPending())\r\n    dispatch(logingSuccess(localToken))\r\n    if (localStorageFirstName) {\r\n      dispatch(userPending())\r\n      dispatch(userFirstName(localStorageFirstName))\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,EAAEC,aAAa,EAAEC,kBAAkB,QAAQ,aAAa;AAC9E,SAASC,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAChD,MAAMC,qBAAqB,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/D,MAAME,KAAK,GAAGb,WAAW,CAACG,kBAAkB,CAAC;EAC7C;EACA,IAAIM,UAAU,IAAI,CAACI,KAAK,EAAE;IACxBL,QAAQ,CAACP,aAAa,EAAE,CAAC;IACzBO,QAAQ,CAACN,aAAa,CAACO,UAAU,CAAC,CAAC;IACnC,IAAIG,qBAAqB,EAAE;MACzBJ,QAAQ,CAACH,WAAW,EAAE,CAAC;MACvBG,QAAQ,CAACJ,aAAa,CAACQ,qBAAqB,CAAC,CAAC;IAChD;EACF;AACF,CAAC;AAAAL,EAAA,CAdYD,gBAAgB;EAAA,QACVP,WAAW,EAGdC,WAAW;AAAA;AAAAc,EAAA,GAJdR,gBAAgB;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}